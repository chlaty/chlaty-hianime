name: Build Shared Library on Linux

on:
  push:
    branches: [build]
  pull_request:
    branches: [build]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu     # Default 64-bit
          - i686-unknown-linux-gnu       # 32-bit
          - aarch64-unknown-linux-gnu    # ARM64
          - armv7-unknown-linux-gnueabihf # ARMv7 (hard float)

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust and Target
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Install Cross Dependencies
        run: |
          sudo apt-get update
          if [ "${{ matrix.target }}" = "i686-unknown-linux-gnu" ]; then
            sudo apt-get install gcc-multilib
          elif [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            sudo apt-get install gcc-aarch64-linux-gnu
            echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          elif [ "${{ matrix.target }}" = "armv7-unknown-linux-gnueabihf" ]; then
            sudo apt-get install gcc-arm-linux-gnueabihf
            echo "CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          fi

      - name: Build Shared Library
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload .so Artifact
        uses: actions/upload-artifact@v4
        with:
          name: so-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/lib*.so
